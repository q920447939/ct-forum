package

import cn.withmes.common.utils.StringUtils;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.stereotype.Service;

${package.ServiceImpl}
        ;
    ${package.Entity}.${entity};
    ${package.Entity}.vo.${entity}ListVO;
    ${package.Mapper}.${table.mapperName};
    ${package.Service}.${table.serviceName};
    ${superServiceImplClassPackage}
        ;
    ${superMapperClassPackage}
        ;



/**
 * @Description: $!{table.comment} 服务实现类
 * @author ${author}
 * @date ${date}
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${entity}> implements ${table.serviceName} {

	@Autowired
	private ${table.mapperName} mapper;

	@Override
	public BaseMapper<${entity}> getBaseMapper() {
		return mapper;
	}

	@Override
	public   IPage<${entity}> page (Page<${entity}DTO> page, ${entity}ListVO vo) {
		${entity} dto = CopyAttributesUtils.copyAtoB(vo, ${entity}.class);
        QueryWrapper wrapper = new QueryWrapper();
        // todo wrapper select
        Page<${entity}> queryPage = CopyAttributesUtils.copyAtoB(page, Page.class);
        IPage<${entity}> pageList = mapper.selectPage(queryPage, wrapper);
		return pageList;
	}
	
}
#end
